{"version":3,"sources":["components/TodoInput.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoInput","_this$props","this","props","item","handleChange","handleSubmit","editItem","react_default","a","createElement","className","onSubmit","type","placeholder","value","onChange","concat","Component","TodoItem","id","title","handleDelete","handleEdit","handleDoneTask","completed","onClick","TodoList","items","updateTodosToShow","clearList","handleDeleteDoneTasks","react","length","map","TodoItem_TodoItem","key","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","setState","target","preventDefault","newItem","state","updatedItems","toConsumableArray","uuid","string","itemsToShow","filteredItems","filter","selectedItem","find","TodoInput_TodoInput","TodoList_TodoList","filterDoneTasks","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.84641061.chunk.js","sourcesContent":["import React, { Component } from 'react'\n/* named export ( usage of {} while importing ) */\nexport default class TodoInput extends Component {\n    render() {\n        /* Destructuring the entire received props object as new varuable instances */\n        const {item, handleChange, handleSubmit, editItem} = this.props  \n        \n        return (\n            /* returning the whole UI as a card body */\n            <div className=\"card card-body my-3\">\n            {/* binding the event listener to a destructured event handler function*/}\n                <form onSubmit={handleSubmit}>\n                {/* using bootstrap's input group component with an icon */}\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text bg-info text-white\">\n                                <i className=\"fas fa-book\" />\n                            </div>\n                        </div>\n\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"New Todo\"\n                            value={item}  /* destructured item value */\n                            onChange={handleChange} /* \"\" \"\" handlechange event function */\n                        />\n                    </div>\n                    <button \n                        type=\"submit\"\n                        className={`btn btn-block mt-3 ${editItem ? 'btn-success' : 'btn-info'}`}\n                    >\n                        {editItem ? 'Edit task' : 'Add new task'}\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n/* named export  */\nexport default class TodoItem extends Component {\n    render() {\n        /* destructuring the received prop obj as new variable instances */\n        const {id , title, handleDelete, handleEdit, handleDoneTask, completed} = this.props\n\n        return (\n            /* returning out a list of items */\n            <li className=\"list-group-item d-flex justify-content-between my-2\">\n            {/* Todo item's title rendering (item.title) */}\n                <h6 className={`mt-1 mb-0 align-middle ${completed ? 'completed-task' : ''}`}>{title}</h6>\n                <div className=\"todo-icon\">\n                    <span \n                        className={`mx-2 ${completed ? 'text-success' : 'text-secondary'}`}\n                        onClick={() => handleDoneTask(id)}\n                    >\n                        <i className={`${completed ? 'far fa-check-square' : 'far fa-square'}`} />\n                    </span>\n                    <span \n                        className=\"mx-2 text-warning\"\n                        onClick={() => handleEdit(id)}\n                    >\n                        <i className=\"fas fa-pen\" />\n                    </span>\n                    <span \n                        className=\"mx-2 text-danger\"\n                        onClick={() => handleDelete(id)}\n                    >\n                        <i className=\"fas fa-trash\" />\n                    </span>\n                </div>\n            </li>\n        )\n    }\n}\n","import React, { Component, Fragment } from 'react'\nimport TodoItem from './TodoItem'\n/* named export  */\nexport default class TodoList extends Component {\n    render() {\n        /* destructuring the array of obj literals from props obj */\n        const {\n            items,\n            updateTodosToShow,\n            clearList,\n            handleDelete,\n            handleEdit,\n            handleDoneTask,\n            handleDeleteDoneTasks\n        } = this.props;\n\n        return (\n            <Fragment>\n                <h3 className=\"text-center\">\n                    TodoList\n                </h3>\n\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <button \n                            type=\"button\"\n                            className=\"btn btn-info btn-block mt-1\"\n                            onClick={() => updateTodosToShow(\"all\")}\n                        >\n                            All\n                        </button>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <button \n                            type=\"button\"\n                            className=\"btn btn-info btn-block mt-1\"\n                            onClick={() => updateTodosToShow(\"done\")}\n                        >\n                            Done\n                        </button>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <button \n                            type=\"button\"\n                            className=\"btn btn-info btn-block mt-1\"\n                            onClick={() => updateTodosToShow(\"todo\")}\n                        >\n                            Todo\n                        </button>\n                    </div>\n                </div>\n                 {/*rendering the ul with list of items */ }\n                {\n                items.length === 0 ? '' :\n                    <ul className=\"list-group my-5\">\n                        {\n                            /* mapping over the entire items array and passing out the props */\n                            items.map(item => {\n                                return (\n                                    <TodoItem\n                                        key={item.id}\n                                        id={item.id}\n                                        title={item.title}\n                                        completed={item.completed}\n                                        handleDelete={() => handleDelete(item.id)}\n                                        handleEdit={() => handleEdit(item.id)}\n                                        handleDoneTask={handleDoneTask}\n                                    />\n                                )\n                            })\n                        }\n                        {/* final 2 buttons to handle delete tasks and delete done task */}\n                        <div className=\"row mt-4\">\n                            <div className=\"col-md-6\">\n                                <button \n                                    type=\"button\"\n                                    className=\"btn btn-danger btn-block mt-1\"\n                                    onClick={handleDeleteDoneTasks}\n                                >\n                                    Delete done tasks\n                                </button>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <button \n                                    type=\"button\"\n                                    className=\"btn btn-danger btn-block mt-1\"\n                                    onClick={clearList}\n                                >\n                                    Delete all tasks\n                                </button>\n                            </div>\n                        </div>\n                    </ul>\n                }\n            </Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react'\n/* uuid package */ \nimport uuid from 'uuid'\n/* importing * components */ \nimport TodoInput from './components/TodoInput'\nimport TodoList from './components/TodoList'\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t/* lifting up the entire state to be shared upon other components */ \n\t\tthis.state={\n\t\t\titems: [],     /*todo array */\n\t\t\titemsToShow: \"all\",  /*todo category */\n\t\t\tid: uuid(),  /* id */\n\t\t\titem: '',    /* todo input value */\n\t\t\teditItem: false,  /*bool to editItem check */\n\t\t};\n\t}\n\t/* handling out onChange event on the input element via event handler function */ \n\thandleChange = event => {\n\t\t/* modifying the state's item value to the targeted element's value */ \n\t\tthis.setState({\n\t\t\titem: event.target.value\n\t\t})\n\t}\n\t/* handling submit event on the entire form (todoInput component) */ \n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\t\t/* creating new obj to be added in the items array of our managed state */ \n\t\tconst newItem = {\n\t\t\t/* 3 properties defining the added item (id,title,completed) */ \n\t\t\tid: this.state.id,\n\t\t\ttitle: this.state.item,\n\t\t\tcompleted: false\n\t\t}\n\t\t/* merging the older state's items array with the newly created obj into the item's array */ \n\t\tconst updatedItems = [...this.state.items, newItem]\n\t\t/* updating the items array with the above created array */ \n\t\tif (this.state.item.length > 0) {\n\t\t\tthis.setState({\n\t\t\t\titems: updatedItems,  /* older items array with newly created array */\n\t\t\t\tid: uuid(),\n\t\t\t\titem: '',\n\t\t\t\teditItem: false\n\t\t\t})\n\t\t}\n\t}\n\t/* categorizing todo's in 3 categories */ \n\tupdateTodosToShow = string => {\n\t\tthis.setState({\n\t\t\titemsToShow: string   /* all || done || todo */\n\t\t});\n\t};\n\n\thandleDoneTask = (id, completed) => {\n\t\tconst filteredItems = this.state.items.map(item => {\n\t\t\titem.id === id && (item.completed = !item.completed)\n\t\t\treturn item\n\t\t})\n\n\t\tthis.setState({\n\t\t\titems: filteredItems,\n\t\t})\n\t}\n\t/* deleting elements from the items array through their id property */\n\thandleDelete = id => {\n\t\t/* returning out only those elements which are not triggered with this function */\n\t\tconst filteredItems = this.state.items.filter(item => item.id !== id)\n\t\t/* updating the items array */\n\t\tthis.setState({\n\t\t\titems: filteredItems\n\t\t})\n\t}\n\n\thandleEdit = id => {\n\t\t/* similar to deleting the array (filtering only those elements not triggered by this handler) */\n\t\tconst filteredItems = this.state.items.filter(item => item.id !== id)\n\t\t/* getting the selected item through find with a callback  function */\n\t\tconst selectedItem = this.state.items.find(item => item.id === id)\n\n\t\tthis.setState({\n\t\t\titems: filteredItems,\n\t\t\tid: id,\n\t\t\titem: selectedItem.title,\n\t\t\teditItem: true\n\t\t})\n\t}\n\t/* deleting the done todos */\n\thandleDeleteDoneTasks = () => {\n\t\t/* filtering the array as it has only those elements whose completed prop is true */\n\t\tconst filteredItems = this.state.items.filter(item => item.completed === false)\n\n\t\tthis.setState({\n\t\t\titems: filteredItems\n\t\t})\n\t}\n\t/* making the items array empty */\n\tclearList = () => {\n\t\tthis.setState({\n\t\t\titems: []\n\t\t})\n\t}\n\t/* rendering the UI */\n\trender() {\n\t\tlet items = []\n\t\t/* changing items array according to the category selection */\n\t\tif (this.state.itemsToShow === \"all\") {\n\t\t\t/* items array to be the entire array */\n\t\t\titems = this.state.items;\n\t\t} else if (this.state.itemsToShow === \"todo\") {\n\t\t\t/* items array to be those elements whose completed prop is false  */\n\t\t\titems = this.state.items.filter(item => item.completed === false);\n\t\t} else if (this.state.itemsToShow === \"done\") {\n\t\t\t/*items array to be those elements whose completed prop is true */\n\t\t\titems = this.state.items.filter(item => item.completed === true);\t\t\t\n\t\t}\n\n\t\treturn (\n\t\t\t/* parent container */\n\t\t\t<div className=\"container\">\n\t\t\t{ /* row  */ }\n\t\t\t\t<div className=\"row\">\n\t\t\t\t{ /* col layout which stacks in the smaller screen devices and equals to 8 col width from medium to extralg screen devices */ }\n\t\t\t\t\t<div className=\"col-12 col-md-8 mx-auto mt-4\">\n\t\t\t\t\t{/* passing out the required props (eventhandler function, input value) */ }\n\t\t\t\t\t\t<h3 className=\"text-capitalize text-center\">TodoInput</h3>\n\t\t\t\t\t\t<TodoInput\n\t\t\t\t\t\t\titem={this.state.item}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ /* passing every event handler function as props along with the items array */}\n\t\t\t\t\t\t<TodoList\n\t\t\t\t\t\t\titems={items}\n\t\t\t\t\t\t\tfilterDoneTasks={this.filterDoneTasks}\n\t\t\t\t\t\t\tclearList={this.clearList}\n\t\t\t\t\t\t\thandleDelete={this.handleDelete}\n\t\t\t\t\t\t\thandleEdit={this.handleEdit}\n\t\t\t\t\t\t\thandleDoneTask={this.handleDoneTask}\n\t\t\t\t\t\t\thandleDeleteDoneTasks={this.handleDeleteDoneTasks}\n\t\t\t\t\t\t\tupdateTodosToShow={this.updateTodosToShow}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}